### File managed with puppet ###
## Module: '<%= scope.to_hash['module_name'] %>'

<% unless [nil, :undefined, :undef].include?(scope['candlepin::consumer_system_name_pattern']) -%>
candlepin.consumer_system_name_pattern=<%= scope['candlepin::consumer_system_name_pattern'] %>
<%- end -%>
candlepin.environment_content_filtering=<%= scope['candlepin::env_filtering_enabled'] %>
candlepin.auth.basic.enable=<%= scope['candlepin::enable_basic_auth'] %>
candlepin.auth.trusted.enable=<%= scope['candlepin::enable_trusted_auth'] %>

candlepin.audit.hornetq.config_path=<%= scope['candlepin::broker_config_file'] %>

<% if scope['candlepin::oauth_key'] != "" -%>
candlepin.auth.oauth.enable=true
candlepin.auth.oauth.consumer.<%= scope['candlepin::oauth_key'] %>.secret=<%= scope['candlepin::oauth_secret'] %>
<%- end -%>

<% unless [nil, :undefined, :undef].include?(scope['candlepin::adapter_module']) -%>
module.config.adapter_module=<%= scope['candlepin::adapter_module'] %>
<%- end -%>

candlepin.ca_key=<%= scope['candlepin::ca_key'] %>
candlepin.ca_cert=<%= scope['candlepin::ca_cert'] %>
<% unless [nil, :undefined, :undef].include?(scope['candlepin::ca_key_password_unsensitive']) -%>
candlepin.ca_key_password=<%= scope['candlepin::ca_key_password_unsensitive'] %>
<%- end -%>

candlepin.async.jobs.ExpiredPoolsCleanupJob.schedule=<%= scope['candlepin::expired_pools_schedule'] %>
<% if scope['candlepin::loggers'].any? -%>

<% scope['candlepin::loggers'].each do |logger, log_level| -%>
log4j.logger.<%= logger %>=<%= log_level %>
<% end -%>
<% end -%>
